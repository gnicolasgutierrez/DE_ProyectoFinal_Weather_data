version: '3'

# silent: true

env:
  ROOT_PROJECT: ./etl-weather-process-airflow
  DOCKER: docker-compose.yaml

tasks:
  pre_project:
    cmds:
      - echo "CREANDO LAS CARPETAS NECESARIAS PARA AIRFLOW Y ALMACENAMIENTO"
      - echo -e "AIRFLOW_UID=$(id -u)" > $ROOT_PROJECT/.env
      - |
        cat <<EOF >> $ROOT_PROJECT/.env
        REDSHIFT_URL=postgresql+psycopg2://$REDSHIFT_USER:$REDSHIFT_PWD@$REDSHIFT_HOST:$REDSHIFT_PORT/$REDSHIFT_DB
        REDSHIFT_USER=${REDSHIFT_USER}
        REDSHIFT_PWD=${REDSHIFT_PWD}
        REDSHIFT_PORT=${REDSHIFT_PORT}
        REDSHIFT_DB=${REDSHIFT_DB}
        REDSHIFT_SCHEMA=${REDSHIFT_SCHEMA}
        EMAIL=${EMAIL}
        EMAIL_PASSWORD=${EMAIL_PASSWORD}
        SMTP_HOST=${SMTP_HOST}
        SMTP_STARTTLS=${SMTP_STARTTLS}
        SMTP_SSL=${SMTP_SSL}
        SMTP_USER=${SMTP_USER}
        SMTP_PASSWORD=${SMTP_PASSWORD}
        SMTP_PORT=${SMTP_PORT}
        SMTP_MAIL_FROM=${SMTP_MAIL_FROM}
        EOF
      - mkdir -p $ROOT_PROJECT/{raw_data,processed_data,dags,logs,plugins,config}
      - tree -L 2 $ROOT_PROJECT

  start_project:
    cmds:
      - docker compose -f $ROOT_PROJECT/$DOCKER up airflow-init --build
      - docker compose -f $ROOT_PROJECT/$DOCKER up -d --build
      - docker container ls -a

  down_project:
    cmds:
      - docker compose -f $ROOT_PROJECT/$DOCKER down

  cleanup:
    cmds:
      - rm -rf  $ROOT_PROJECT/{raw_data,processed_data,logs,plugins,config}
      - rm -f   $ROOT_PROJECT/.env
      - rm -rf  $ROOT_PROJECT/dags/*pycache*
      - rm -rf  $ROOT_PROJECT/dags/*/*pycache*
